import os
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
import random

# ржЧрж╛рж▓рж┐ рж╢ржмрзНржжрзЗрж░ рждрж╛рж▓рж┐ржХрж╛
bad_words = ['gandu', 'choda', 'bokachoda', 'madarchod', 'fuck', 'shit', 'banchod', 'ржЪрзЛржжрж╛', 'ржорж╛ржжрж╛рж░ржЪрзЛржж', 'ржЪрзБржжрж┐']

# ржоржЬрж╛рж░ рж░рзНржпрж╛ржирзНржбржо reply
witty_replies = [
    "ржХрж┐ ржХржЗрж▓рзЗржи ржорж┐рзЯрж╛! ржПржХржжржо ржмрж╛ржЬрж┐ржорж╛ржд ЁЯШО",
    "ржПржЗржЯрж╛ ржмрж▓рж╛рж░ ржжрж░ржХрж╛рж░ ржЫрж┐рж▓ ржнрж╛ржЗ? ЁЯШЕ",
    "ржЖржЬржХрзЗ ржХржЗрж░рж╛ ржжрж┐рж▓рзЗржи ржнрж╛ржЗ! ЁЯФе",
    "ржЖржкржирж╛рж░ ржХржерж╛рзЯ ржлрж╛ржЯрж╛ржлрж╛ржЯрж┐ vibe ржкрж╛ржЗржЫрж┐! ЁЯдй",
    "ржПржоржи ржХржерж╛ рж╢рзБржирзЗ ржЪрж╛ ржЦрж╛ржЗрждрзЗ ржоржи ржЪрж╛ржЗрждрзЗржЫрзЗ тШХ",
    "ржнрж╛ржЗ, ржПржоржи reply ржХржЗ ржкрж╛ржЗрж▓рзЗржи! ЁЯШВ",
    "ржоржирзЗ рж╣ржЪрзНржЫрзЗ ржЖржкржирж┐ heavy ржЬрж┐ржирж┐рж╕! ЁЯза",
    "ржПржЗрж░ржХржо ржХржерж╛ рж╢рзБржирж▓рзЗ bot ржУ ржоржЬрж╛ ржкрж╛рзЯ! ЁЯдЦ",
    "ржнрж╛ржЗ, ржХржерж╛ ржХржо ржХрж┐ржирзНрждрзБ meaning deep! ЁЯзР",
    "Telegram group ржнрж╛ржЗ ржнрж╛ржЗ тАФ ржЖржкржирж┐ рж░рж╛ржЬрж╛! ЁЯСС"
]

# Emoji reactions
reactions = ["тЭдя╕П", "ЁЯШВ", "ЁЯФе", "ЁЯШ│", "ЁЯе░", "ЁЯСН"]

async def auto_reply(update: Update, context: ContextTypes.DEFAULT_TYPE):
    msg = update.message
    if msg and msg.text:
        text = msg.text.lower()

        # ржЧрж╛рж▓рж┐ ржЪрзЗржХ ржХрж░рзЗ ржорзБржЫрзЗ ржлрзЗрж▓рж╛
        if any(bad_word in text for bad_word in bad_words):
            try:
                await msg.delete()
                await msg.reply_text("ржнрж╛ржЗ ржЧрж╛рж▓рж┐ ржжрж┐рж▓рзЗ ржХрж┐ржирзНрждрзБ ржЪрж▓ржмрзЗ ржирж╛ ЁЯШа")
            except Exception as e:
                print("Delete failed:", e)
            return

        reply = random.choice(witty_replies)
        emoji = random.choice(reactions)
        await msg.reply_text(f"{reply} {emoji}")

async def start_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("ЁЯЩЛтАНтЩВя╕П ржЖржорж┐ XR GPT BOT! ржЖржкржирж╛рж░ Bangla Group-ржПрж░ ржЕржЯрзЛ рж░рж┐ржкрзНрж▓рж╛ржЗ ржмржирзНржзрзБ ЁЯдЦ")

async def help_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(\"""
ЁЯУЪ рж╕рж╛рж╣рж╛ржпрзНржпрзЗрж░ рждрж╛рж▓рж┐ржХрж╛:
тЬЕ Random Bangla auto-reply
тЬЕ ржЧрж╛рж▓рж┐ ржжрж┐рж▓рзЗ auto delete
тЬЕ Stylish witty ChatGPT-style response
тЬЕ Emoji react
тЬЕ Commands:
/start - ржмржЯ ржЪрж╛рж▓рзБ ржХрж░рзБржи
/help - рж╕рж╛рж╣рж╛ржпрзНржп ржирж┐ржи
/about - ржмржЯ рж╕ржорзНржкрж░рзНржХрзЗ ржЬрж╛ржирзБржи
/owner - ржирж┐рж░рзНржорж╛рждрж╛рж░ рж╕рж╛ржерзЗ ржпрзЛржЧрж╛ржпрзЛржЧ
\""")

async def about_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("ЁЯдЦ XR GPT BOT рждрзИрж░рж┐ ржХрж░рзЗржЫрзЗ ChatGPT ржнрж╛ржЗрзЯрзЗрж░ ржорждрзЛ ржПржХржЬржи ржорж┐рзЯрж╛ ЁЯза")

async def owner_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("ЁЯСд Bot Owner: @Xr_bd_bot")

def main():
    TOKEN = os.getenv("BOT_TOKEN")
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start_cmd))
    app.add_handler(CommandHandler("help", help_cmd))
    app.add_handler(CommandHandler("about", about_cmd))
    app.add_handler(CommandHandler("owner", owner_cmd))
    app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), auto_reply))
    app.run_polling()

if __name__ == "__main__":
    main()
